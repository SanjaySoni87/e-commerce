{"version":3,"file":"static/js/656.0daca827.chunk.js","mappings":"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","sources":["CommonUtils/commonUtils.js","../node_modules/react-bootstrap/esm/Table.js","Containers/Cart/index.js"],"sourcesContent":["export const formatPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: \"USD\"\n    }).format(price);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { formatPrice } from \"../../CommonUtils/commonUtils\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getAllCarts,\n  removeFromCart,\n  toggleCartQty,\n  clearCart\n} from \"../../Store/cartSlice\";\nimport \"./Cart.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Table from \"react-bootstrap/Table\";\nimport { BsFillCartCheckFill, BsTrash } from \"react-icons/bs\";\nconst CartPageContainer = () => {\n  const dispatch = useDispatch();\n  const carts = useSelector(getAllCarts);\n  const { itemsCount, totalAmount} = useSelector((state) => state.cart);\n  //console.log('itemsCount',itemsCount,'totalAmount',totalAmount)\n\n  const checkOutHandler = ()=>{\n    console.log(carts)\n  }\n  if (carts.length === 0) {\n    return (\n      <div className=\"container\">\n        <div className=\"emptyCart\">\n          <div className=\"topText\">\n            <BsFillCartCheckFill />\n            <span className=\"textGray\">Your Cart Is Empty.</span>\n          </div>\n          <Link to=\"/\" className=\"shoppingBtn btn btn-dark\">\n            Continue shopping Now\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"cart\">\n      <div className=\"container\">\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>S.N.</th>\n              <th>Product</th>\n              <th>Unit Price</th>\n              <th>Quantity</th>\n              <th>Total Price</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {carts.map((cart, idx) => {\n              return (\n                <tr key={cart?.id}>\n                  <td className=\"cartIndex\">{idx + 1}</td>\n                  <td className=\"cartTitle\">\n                    {cart?.title}\n                    <img src={cart?.images[0]} alt={cart?.title} title={cart?.title} />\n                  </td>\n                  <td className=\"price\">\n                    {formatPrice(cart?.discountedPrice)}\n                  </td>\n                  <td className=\"qtyBtnSec\">\n                    <div className=\"quatityBtnGroup\">\n                      <span\n                        className=\"qtyBtn\"\n                        onClick={() =>\n                          dispatch(toggleCartQty({ id: cart?.id, type: \"DEC\" }))\n                        }\n                      >\n                        -\n                      </span>\n                      <span className=\"qty-value\">{cart?.quantity}</span>\n                      <span\n                        className=\"qtyBtn\"\n                        onClick={() =>\n                          dispatch(toggleCartQty({ id: cart?.id, type: \"INC\" }))\n                        }\n                      >\n                        +\n                      </span>\n                    </div>\n                  </td>\n                  <td>{formatPrice(cart?.totalPrice)}</td>\n                  <td>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => dispatch(removeFromCart(cart?.id))}\n                    >\n                      Delete\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n        <div>\n          <div className=\"totalSec\">\n            <Button variant=\"warning\" onClick={() => dispatch(clearCart())}>\n              <BsTrash />\n              Clear Cart\n            </Button>\n            <div className=\"totlaAmount\">\n                <span>Total items:- {itemsCount}</span>\n                <span>Total prices:- \n                    {\n                      `${formatPrice(totalAmount)}`\n                    }\n                </span>\n            </div>\n            <Button className=\"checkoutbtn\" onClick={checkOutHandler} variant=\"success\">\n              Check Out\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CartPageContainer;\n"],"names":["formatPrice","price","Intl","NumberFormat","style","currency","format","React","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutProperties","_excluded","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","concat","table","_jsx","_objectSpread","responsiveClass","children","dispatch","useDispatch","carts","useSelector","getAllCarts","_useSelector","state","cart","itemsCount","totalAmount","length","_jsxs","BsFillCartCheckFill","Link","to","Table","map","idx","title","src","images","alt","discountedPrice","onClick","toggleCartQty","id","type","quantity","totalPrice","Button","removeFromCart","clearCart","BsTrash","console","log"],"sourceRoot":""}